---

- name: Create kafka group
  group:
    name: '{{ kafka_group }}'
    state: present
  tags:
    - kafka_group

- name: Create kafka user
  user:
    name: '{{ kafka_user }}'
    group: '{{ kafka_group }}'
    state: present
    createhome: no
  tags:
    - kafka_user

- name: Check if Kafka has already been downloaded and unpacked
  stat:
    path: '{{ kafka_root_dir }}/kafka_{{ kafka_scala_version }}-{{ kafka_version }}'
  register: dir
  tags:
    - kafka_download

- name: Download Apache Kafka
  get_url:
    url: http://www-eu.apache.org/dist/kafka/{{ kafka_version }}/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz
    dest: /tmp
  when: not dir.stat.exists
  tags:
    - kafka_download

- name: Unpack Apache Kafka
  unarchive:
    src: /tmp/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz
    dest: '{{ kafka_root_dir }}'
    copy: no
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
  become: yes 
  when: not dir.stat.exists
  tags:
    - kafka_download
    - kafka_unpack

- name: Check if Kafka binary files and links exists 
  stat:
    path: '{{ kafka_dir }}'
  register: binary_dir
  tags:
    - kafka_dirs

- name: Delete symlinks and dirs if exists
  file:
    path: '{{ kafka_dir }}'
    state: absent
  become: yes 
  when: binary_dir.stat.exists
  tags:
    - kafka_dirs

- name: Create symlink to kafka installation directory
  file:
    src: '{{ kafka_root_dir }}/kafka_{{ kafka_scala_version }}-{{ kafka_version }}'
    dest: '{{ kafka_dir }}'
    state: link
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
  become: yes 
  tags:
    - kafka_dirs

- name: Create directory for kafka log files
  file:
    path: '{{ kafka_log_dir }}'
    state: directory
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
  become: yes 
  tags:
    - kafka_dirs

- name: Create directory for kafka configuration files
  file:
    path: '{{ kafka_conf_dir }}'
    state: directory
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
  become: yes 
  tags:
    - kafka_dirs

- name: Copy kafka default configuration directory to custom kafkas
  copy:
    src: '{{ kafka_dir }}/config'
    dest: '{{ kafka_conf_dir }}'
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    remote_src: yes
  become: yes 
  tags:
    - kafka_dirs

- name: Template configuration file to server.properties
  template:
    src: server.properties.j2
    dest: '{{ kafka_conf_dir }}/config/server.properties'
  become: yes 
  notify:
    - Restart kafka service
  tags:
    - kafka_config

- name: Template configuration file to zookeeper.properties
  template:
    src: zookeeper.properties.j2
    dest: '{{ kafka_conf_dir }}/config/zookeeper.properties'
  become: yes
  tags:
    - kafka_config

- name: Template configuration file to connect-standalone.properties
  template:
    src: connect-standalone.properties.j2
    dest: '{{ kafka_conf_dir }}/config/connect-standalone.properties'
  become: yes
  tags:
    - kafka_config

- name: Template configuration file to connect-distributed.properties
  template:
    src: connect-distributed.properties.j2
    dest: '{{ kafka_conf_dir }}/config/connect-distributed.properties'
  become: yes
  tags:
    - kafka_config

- name: Template configuration file to producer.properties
  template:
    src: producer.properties.j2
    dest: '{{ kafka_conf_dir }}/config/producer.properties'
  become: yes
  tags:
    - kafka_config

- name: Template configuration file to consumer.properties
  template:
    src: consumer.properties.j2
    dest: '{{ kafka_conf_dir }}/config/consumer.properties'
  become: yes
  tags:
    - kafka_config


- name: Template Kafka init.d service file
  template:
    src: kafka.initd.j2
    dest: /etc/init.d/kafka_{{ kafka_broker_id }}
    mode: 0755
  become: yes
  notify:
    - Reload initd
    - Restart kafka service
  tags:
    - kafka_service
  when: kafka_start_service

- name: Template kafka systemd service file to /usr/lib/systemd/system/kafka.service
  template:
    src: kafka.service.j2
    dest: /lib/systemd/system/kafka_{{ kafka_broker_id }}.service
  become: yes
  notify:
    - Restart kafka systemd
  tags:
    - kafka_service
  when: kafka_start_service

- name: Install and start the kafka service
  service:
    name: kafka_{{ kafka_broker_id }}
    state: started
    enabled: yes
  become: yes
  tags:
    - kafka_service
  when: kafka_start_service

# - name: Delete the kafka archive file
#   file:
#     path: /tmp/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz
#     state: absent
#   tags:
#     - kafka_cleanup
